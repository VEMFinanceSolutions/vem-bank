ext {
    versions = [
            springBoot: "3.2.2",
            swagger   : "1.6.15",
            lombok    : "1.18.30",
            mapstruct : "1.5.5.Final",
            postgres  : "42.3.8",
            mysql     : "8.0.28"
    ]

    libs = [
            springBootWeb     : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
            springBootDataJpa : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",

            swagger           : "org.springdoc:springdoc-openapi-ui:$versions.swagger",

            lombok            : "org.projectlombok:lombok:$versions.lombok",

            mapstruct         : "org.mapstruct:mapstruct:$versions.mapstruct",
            mapstructProcessor: "org.mapstruct:mapstruct-processor:$versions.mapstruct",

            postgres          : "org.postgresql:postgresql:$versions.postgres",

            mysql             : "mysql:mysql-connector-java:$versions.mysql"
    ]
}

/*
ext {
    versions = [
            springBoot    : "3.2.2",
            springCloud   : "4.1.0",
            circuitBreaker: "3.1.0",
            lombok        : "1.18.30",
            mySQL         : "8.3.0",
            postgreSQL    : "42.6.0",
            mapStruct     : "1.5.5.Final",
            jwt           : "4.4.0",
            swagger       : "2.3.0",
            iTextPDF      : "5.5.13.3",
            jasperReports : "6.21.0",
            openPDF       : "1.3.36",  // required dependency for jasperReports
            twilio        : "9.14.1",
            micrometer    : "1.2.2",   // new spring sleuth
            zipkinBrave   : "2.16.3",  // new zipkin brave
            prometheus    : "1.12.2",
            iban4J        : "3.2.7-RELEASE"
    ]

    libs = [
            springBootActuator              : "org.springframework.boot:spring-boot-starter-actuator:$versions.springBoot",                 // Actuator
            springBootAMQP                  : "org.springframework.boot:spring-boot-starter-amqp:$versions.springBoot",                     // RabbitMQ
            springBootBatch                 : "org.springframework.boot:spring-boot-starter-batch:$versions.springBoot",                    // Batch - Berkin Hoca - big data transactionları için ?
            springBootCassandra             : "org.springframework.boot:spring-boot-starter-data-cassandra:$versions.springBoot",           // Cassandra
            springBootElasticsearch         : "org.springframework.boot:spring-boot-starter-data-elasticsearch:$versions.springBoot",       // Elasticsearch
            springBootJPA                   : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",                 // Jakarta Persistence Api for Spring Boot v3.0+ --> Hibernate
            springBootMongoDB               : "org.springframework.boot:spring-boot-starter-data-mongodb:$versions.springBoot",             // MongoDB
            springBootRedis                 : "org.springframework.boot:spring-boot-starter-data-redis:$versions.springBoot",               // Redis
            springBootMail                  : "org.springframework.boot:spring-boot-starter-mail:$versions.springBoot",                     // Mail
            springBootSecurity              : "org.springframework.boot:spring-boot-starter-security:$versions.springBoot",                 // Security
            springBootValidation            : "org.springframework.boot:spring-boot-starter-validation:$versions.springBoot",               // Validation
            springBootWeb                   : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",                      // Web - Development kit for MVC including REST API
            springCloudConfig               : "org.springframework.cloud:spring-cloud-starter-config:$versions.springCloud",                // Cloud
            springCloudConfigServer         : "org.springframework.cloud:spring-cloud-config-server:$versions.springCloud",                 // Cloud - @EnableConfigServer for Config Microservice
            springCloudConfigClient         : "org.springframework.cloud:spring-cloud-config-client:$versions.springCloud",                 // Cloud - reading "${]" values in Config Server for Clients=Microservices
            springCloudCircuitBreaker       : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$versions.circuitBreaker",         // CircuitBreaker for fallbacks in Gateway Service
            springCloudCircuitBreakerReactor: "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:$versions.circuitBreaker", // CircuitBreaker for web-application-type: reactive in Gateway Service
            springCloudGateway              : "org.springframework.cloud:spring-cloud-starter-gateway:$versions.springCloud",               // Gateway
            springCloudEurekaClient         : "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$versions.springCloud", // Eureka - Client ( ? )
            springCloudEurekaServer         : "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:$versions.springCloud", // Eureka - Server ( ? )
            springCloudOpenFeign            : "org.springframework.cloud:spring-cloud-starter-openfeign:$versions.springCloud",             // For Sync Messaging Between Services
            */
/*  OLD ZIPKIN DEPENDENCY
            springCloudSleuth       : "org.springframework.cloud:spring-cloud-starter-sleuth:$versions.springCloud",                // Sleuth - tracing and distributed trace system.
            springCloudSleuthZipkin : "org.springframework.cloud:spring-cloud-sleuth-zipkin:$versions.springCloud",                 // Zipkin tool for monitoring trace system.
            micrometer and zipkinBrave are new dependencies which defined at 47th and 48th row.
            *//*

            micrometer                      : "io.micrometer:micrometer-tracing-bridge-brave:$versions.micrometer",                         // Sleuth got moved to Micrometer Tracing project and the instrumentations will be moved to Micrometer and all respective projects
            zipkinBrave                     : "io.zipkin.reporter2:zipkin-reporter-brave:$versions.zipkinBrave",                            // Zipkin tool for monitoring trace system
            prometheus                      : "io.micrometer:micrometer-registry-prometheus:$versions.prometheus",                          // Prometheus tool for system resource monitoring and altering
            lombok                          : "org.projectlombok:lombok:$versions.lombok",                                                  // @LombokAnnotations
            springDockerCompose             : "org.springframework.boot:spring-boot-docker-compose:$versions.springBoot",                   // Docker Compose helper for easier compose.yml preparation
            mySQL                           : "com.mysql:mysql-connector-j:$versions.mySQL",                                                // JDBC Driver for MySQL
            postgreSQL                      : "org.postgresql:postgresql:$versions.postgreSQL",                                             // JDBC Driver for PostgreSQL
            mapStruct                       : "org.mapstruct:mapstruct:$versions.mapStruct",                                                // MapStruct for easier handling DTOs
            mapStructProcessor              : "org.mapstruct:mapstruct-processor:$versions.mapStruct",                                      // MapStruct Processor to allow usage of its @Annotations
            jwt                             : "com.auth0:java-jwt:$versions.jwt",                                                           // JSON Web Token - JWT
            swagger                         : "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.swagger",                        // Swagger UI --> "/swagger-ui/index.html"
            iTextPDF                        : "com.itextpdf:itextpdf:$versions.iTextPDF",                                                   // ITextPdf - Java PDF Library (Deprecated, look for OpenPDF instead)
            jasperReports                   : "net.sf.jasperreports:jasperreports:$versions.jasperReports",                                 // JasperReports - Create reports using part of IText functionality, more general purposes (pdf + reports)
            openPDF                         : "com.github.librepdf:openpdf:$versions.openPDF",                                              // OpenPDF - required dependency for jasperReports, works like ITextPDF
            twilio                          : "com.twilio.sdk:twilio:$versions.twilio",                                                     // Twilio for SMS sending - tutorial: https://www.twilio.com/blog/send-basic-sms-java-springboot
            iban4J                          : "org.iban4j:iban4j:$versions.iban4J"                                                          // IBAN generation and validation - tutorial: https://github.com/arturmkrtchyan/iban4j

            */
/* TEST DEPENDENCIES - NOT FINAL!
            springBootTest          : "org.org.springframework.boot:spring-boot-starter-test:$versions.springBoot",                 // Tests including  JUnit Jupiter, Hamcrest and Mockito
            *//*

    ]
}*/
